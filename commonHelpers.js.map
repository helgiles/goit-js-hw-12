{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst form = document.querySelector('.search-form');\nconst loader = document.querySelector('.loader');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreButton = document.querySelector('.load-more-button');\n\nvar lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n});\n\nconst api = axios.create({\n  baseURL: 'https://pixabay.com/api/',\n  params: {\n    key: '41579263-ea77ea2d4a90e42f3f0b59371',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  },\n});\n\nconst getImages = async params => {\n  try {\n    const response = await api.get('', { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst getImagesRequest = q => {\n  let page = 1;\n  let lastPage = false;\n  const per_page = 40;\n\n  return async () => {\n    try {\n      if (lastPage) {\n        iziToast.info({\n          message: \"We're sorry, but you've reached the end of search results.\",\n          position: 'topRight',\n          backgroundColor: '#EF4040',\n        });\n        return [];\n      }\n      const { hits, totalHits } = await getImages({ page, per_page, q });\n      if (page >= Math.ceil(totalHits / per_page)) {\n        lastPage = true;\n      }\n\n      if (hits.length === 0) {\n        iziToast.error({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight',\n          backgroundColor: '#EF4040',\n        });\n        return;\n      }\n\n      page++;\n\n      return hits;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nfunction renderImages(images = []) {\n  const markup = images.reduce(\n    (\n      html,\n      { largeImageURL, webformatURL, tags, likes, views, comments, downloads }\n    ) =>\n      html +\n      `<li class='gallery-item'>\n    <a class='gallery-link' href='${largeImageURL}'>\n      <img\n        class='gallery-image'\n        src='${webformatURL}'\n        alt='${tags}'\n      />\n    </a>\n    <div class=\"image-info\">\n          <div class=\"info-item\">\n            <span class=\"info-name\">Likes</span>\n            <span class=\"info-value\">${likes}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"info-name\">Views</span>\n            <span class=\"info-value\">${views}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"info-name\">Comments</span>\n            <span class=\"info-value\">${comments}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"info-name\">Downloads</span>\n            <span class=\"info-value\">${downloads}</span>\n          </div>\n        </div>\n  </li>`,\n    ''\n  );\n  gallery.insertAdjacentHTML('beforeend', markup);\n  lightbox.refresh();\n}\n\nlet fetch = null;\n\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n\n  if (fetch != null) {\n    loadMoreButton.removeEventListener('click', fetch);\n  }\n\n  const input = new FormData(event.currentTarget);\n  const query = input.get('input');\n  gallery.innerHTML = '';\n  const fetchImages = getImagesRequest(query);\n\n  fetch = async () => {\n    const images = await fetchImages();\n    renderImages(images);\n  };\n  await fetch();\n\n  loadMoreButton.addEventListener('click', fetch);\n});\n"],"names":["form","gallery","loadMoreButton","lightbox","SimpleLightbox","api","axios","getImages","params","error","getImagesRequest","q","page","lastPage","per_page","iziToast","hits","totalHits","renderImages","images","markup","html","largeImageURL","webformatURL","tags","likes","views","comments","downloads","fetch","event","query","fetchImages"],"mappings":"owBAMA,MAAMA,EAAO,SAAS,cAAc,cAAc,EACnC,SAAS,cAAc,SAAS,EAC/C,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAiB,SAAS,cAAc,mBAAmB,EAEjE,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,gBAAiB,SACjB,aAAc,GAChB,CAAC,EAED,MAAMC,EAAMC,EAAM,OAAO,CACvB,QAAS,2BACT,OAAQ,CACN,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,MACb,CACH,CAAC,EAEKC,EAAY,MAAMC,GAAU,CAChC,GAAI,CAEF,OADiB,MAAMH,EAAI,IAAI,GAAI,CAAE,OAAAG,CAAM,CAAE,GAC7B,IACjB,OAAQC,EAAP,CACA,QAAQ,MAAMA,CAAK,CACpB,CACH,EAEMC,EAAmBC,GAAK,CAC5B,IAAIC,EAAO,EACPC,EAAW,GACf,MAAMC,EAAW,GAEjB,MAAO,UAAY,CACjB,GAAI,CACF,GAAID,EACF,OAAAE,EAAS,KAAK,CACZ,QAAS,6DACT,SAAU,WACV,gBAAiB,SAC3B,CAAS,EACM,GAET,KAAM,CAAE,KAAAC,EAAM,UAAAC,CAAS,EAAK,MAAMV,EAAU,CAAE,KAAAK,EAAM,SAAAE,EAAU,EAAAH,CAAC,CAAE,EAKjE,GAJIC,GAAQ,KAAK,KAAKK,EAAYH,CAAQ,IACxCD,EAAW,IAGTG,EAAK,SAAW,EAAG,CACrBD,EAAS,MAAM,CACb,QACE,2EACF,SAAU,WACV,gBAAiB,SAC3B,CAAS,EACD,MACD,CAED,OAAAH,IAEOI,CACR,OAAQP,EAAP,CACA,QAAQ,MAAMA,CAAK,CACpB,CACL,CACA,EAEA,SAASS,EAAaC,EAAS,GAAI,CACjC,MAAMC,EAASD,EAAO,OACpB,CACEE,EACA,CAAE,cAAAC,EAAe,aAAAC,EAAc,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAExEP,EACA;AAAA,oCAC8BC;AAAA;AAAA;AAAA,eAGrBC;AAAA,eACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAMwBC;AAAA;AAAA;AAAA;AAAA,uCAIAC;AAAA;AAAA;AAAA;AAAA,uCAIAC;AAAA;AAAA;AAAA;AAAA,uCAIAC;AAAA;AAAA;AAAA,SAInC,EACJ,EACE3B,EAAQ,mBAAmB,YAAamB,CAAM,EAC9CjB,EAAS,QAAO,CAClB,CAEA,IAAI0B,EAAQ,KAEZ7B,EAAK,iBAAiB,SAAU,MAAM8B,GAAS,CAC7CA,EAAM,eAAc,EAEhBD,GAAS,MACX3B,EAAe,oBAAoB,QAAS2B,CAAK,EAInD,MAAME,EADQ,IAAI,SAASD,EAAM,aAAa,EAC1B,IAAI,OAAO,EAC/B7B,EAAQ,UAAY,GACpB,MAAM+B,EAActB,EAAiBqB,CAAK,EAE1CF,EAAQ,SAAY,CAClB,MAAMV,EAAS,MAAMa,IACrBd,EAAaC,CAAM,CACvB,EACE,MAAMU,EAAK,EAEX3B,EAAe,iBAAiB,QAAS2B,CAAK,CAChD,CAAC"}